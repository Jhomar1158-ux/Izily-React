[{"D:\\Users\\JGU\\Desktop\\PROYECTOS\\izily_test\\src\\index.js":"1","D:\\Users\\JGU\\Desktop\\PROYECTOS\\izily_test\\src\\reportWebVitals.js":"2","D:\\Users\\JGU\\Desktop\\PROYECTOS\\izily_test\\src\\firebase.js":"3","D:\\Users\\JGU\\Desktop\\PROYECTOS\\izily_test\\src\\App.js":"4","D:\\Users\\JGU\\Desktop\\PROYECTOS\\izily_test\\src\\components\\Cards.js":"5","D:\\Users\\JGU\\Desktop\\PROYECTOS\\izily_test\\src\\containers\\Profesores.js":"6","D:\\Users\\JGU\\Desktop\\PROYECTOS\\izily_test\\src\\components\\Profesor.js":"7","D:\\Users\\JGU\\Desktop\\PROYECTOS\\izily_test\\src\\containers\\Perfil.js":"8","D:\\Users\\JGU\\Desktop\\PROYECTOS\\izily_test\\src\\components\\Navbar.js":"9"},{"size":499,"mtime":1611974779333,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1611960599195,"results":"12","hashOfConfig":"11"},{"size":476,"mtime":1611974934409,"results":"13","hashOfConfig":"11"},{"size":538,"mtime":1612739703337,"results":"14","hashOfConfig":"11"},{"size":791,"mtime":1612033344941,"results":"15","hashOfConfig":"11"},{"size":5808,"mtime":1612739703340,"results":"16","hashOfConfig":"11"},{"size":2100,"mtime":1612739703339,"results":"17","hashOfConfig":"11"},{"size":166,"mtime":1612401639043,"results":"18","hashOfConfig":"11"},{"size":659,"mtime":1612739703338,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"tamvwd",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"D:\\Users\\JGU\\Desktop\\PROYECTOS\\izily_test\\src\\index.js",[],["42","43"],"D:\\Users\\JGU\\Desktop\\PROYECTOS\\izily_test\\src\\reportWebVitals.js",[],"D:\\Users\\JGU\\Desktop\\PROYECTOS\\izily_test\\src\\firebase.js",[],"D:\\Users\\JGU\\Desktop\\PROYECTOS\\izily_test\\src\\App.js",[],"D:\\Users\\JGU\\Desktop\\PROYECTOS\\izily_test\\src\\components\\Cards.js",[],["44","45"],"D:\\Users\\JGU\\Desktop\\PROYECTOS\\izily_test\\src\\containers\\Profesores.js",["46"],"import React, { useEffect, useState } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Profesor from \"../components/Profesor\";\r\nimport { db } from \"../firebase\";\r\n\r\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\n\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\n\r\nconst drawerWidth = 300;\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    margin: 0,\r\n    padding: 0,\r\n  },\r\n  content: {\r\n    paddingTop: 110,\r\n    display: \"flex\",\r\n    position: \"absolute\",\r\n    height: \"100%\",\r\n    width: \"95%\",\r\n    flexDirection: \"row\",\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n  },\r\n  main: {\r\n    background: \"white\",\r\n    overflow: \"auto\",\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n    flexGrow: 1,\r\n    padding: \"15px, 0, 10px, 15px\",\r\n  },\r\n  gridContainer: {\r\n    whidth: \"100%\",\r\n    paddingTop: 15,\r\n  },\r\n}));\r\n\r\nexport default function Profesores(callback, deps) {\r\n  const classes = useStyles();\r\n\r\n  const [profesores, guardarProfesores] = useState([]);\r\n  const [especialidades, guardarEspecialidades] = useState([]);\r\n  const [etiquetas, guardarEtiquetas] = useState([0]);\r\n  const [profesoresFiltrados, guardarProfesoresFiltrados] = useState([]);\r\n\r\n  const traerProfesores = () => {\r\n    const usuariosRef = db.collection(\"usuarios\");\r\n    usuariosRef\r\n      .where(\"esProfesor\", \"==\", true)\r\n      .get()\r\n      .then((querySnapshot) => {\r\n        const docs = [];\r\n        querySnapshot.forEach((doc) => {\r\n          docs.push({ ...doc.data(), id: doc.id });\r\n        });\r\n        guardarProfesores(docs);\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  };\r\n\r\n  const seleccionarEtiquetas = (EspecialidadId) => () => {\r\n    const currentIndex = etiquetas.indexOf(EspecialidadId);\r\n    const etiquetasSeleccionadas = [...etiquetas];\r\n    if (currentIndex === -1) {\r\n      etiquetasSeleccionadas.push(EspecialidadId);\r\n    } else {\r\n      etiquetasSeleccionadas.splice(currentIndex, 1);\r\n    }\r\n    guardarEtiquetas(etiquetasSeleccionadas);\r\n  };\r\n\r\n  const filtrarProfesores = (terminoDeBusqueda) => {\r\n    let etiquetasSeleccionadas = [...etiquetas];\r\n    etiquetasSeleccionadas = etiquetasSeleccionadas.splice(1, etiquetas.length);\r\n    const nuevosProfesoresFiltrados = profesores.filter((profesor) => {\r\n      // Verificar Nombre\r\n      const nombreProfesor = profesor.nombre.toLowerCase();\r\n      const tieneNombreValido = nombreProfesor.includes(terminoDeBusqueda);\r\n\r\n      // Verificar Materia\r\n      const idsDeCursos = profesor.cursos.map((curso) => curso.id);\r\n      let tieneCursoValido = false;\r\n      idsDeCursos.forEach((idCurso) => {\r\n        tieneCursoValido =\r\n          tieneCursoValido || etiquetasSeleccionadas.includes(idCurso);\r\n      });\r\n\r\n      if (etiquetasSeleccionadas.length > 0)\r\n        return tieneNombreValido && tieneCursoValido;\r\n      return tieneNombreValido;\r\n    });\r\n    guardarProfesoresFiltrados(nuevosProfesoresFiltrados);\r\n  };\r\n  const filtrarProfesoresInput = (e) => {\r\n    const terminoDeBusqueda = e.currentTarget.value.toLowerCase();\r\n    filtrarProfesores(terminoDeBusqueda);\r\n  };\r\n\r\n  useEffect(() => {\r\n    traerProfesores();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const especialidadesRef = db.collection(\"especialidades\");\r\n    const todasLasEspecialidades = [];\r\n    especialidadesRef.get().then((querySnapshot) => {\r\n      querySnapshot.forEach((doc) => {\r\n        todasLasEspecialidades.push({ ...doc.data(), id: doc.id });\r\n      });\r\n    });\r\n    guardarEspecialidades(todasLasEspecialidades);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    guardarProfesoresFiltrados(profesores);\r\n  }, [profesores]);\r\n\r\n  useEffect(() => {\r\n    filtrarProfesores(\"\");\r\n  }, [etiquetas]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.content}>\r\n        <div className={classes.drawer}>\r\n          <List>\r\n            <ListItem>\r\n              <FormControl\r\n                className={clsx(classes.margin, classes.textField)}\r\n                variant=\"outlined\"\r\n              >\r\n                <InputLabel htmlFor=\"outlined-adornment-password\">\r\n                  Buscar\r\n                </InputLabel>\r\n                <OutlinedInput\r\n                  id=\"outlined-adornment-password\"\r\n                  type=\"text\"\r\n                  onChange={filtrarProfesoresInput}\r\n                  labelWidth={50}\r\n                />\r\n              </FormControl>\r\n            </ListItem>\r\n            {especialidades.map((especialidad, index) => (\r\n              <ListItem\r\n                button\r\n                key={especialidad.id}\r\n                onClick={seleccionarEtiquetas(especialidad.id)}\r\n              >\r\n                <Checkbox\r\n                  edge=\"start\"\r\n                  checked={etiquetas.indexOf(especialidad.id) !== -1}\r\n                  style={{ color: \"#3f51b5\" }}\r\n                  tabIndex={-1}\r\n                  disableRipple\r\n                />\r\n                <ListItemText primary={especialidad.nombre} />\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        </div>\r\n        <main className={classes.main}>\r\n          <Grid container clasName={classes.gridContainer} spacing={3}>\r\n            {profesoresFiltrados.map((profesor) => (\r\n              <Grid item xs={12} md={4}>\r\n                <Profesor profesor={profesor} />\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </main>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Users\\JGU\\Desktop\\PROYECTOS\\izily_test\\src\\components\\Profesor.js",["47","48","49","50"],"\r\n//Este componente es una card sola\r\n\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n//Cosas raras de MUI\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        maxWidth: 345,\r\n        borderRadius: 3,\r\n        boxShadow: '5px 2px 10px 0 rgba(0, 0, 0, .5)',\r\n    },\r\n    avatar: {\r\n        height: 150,\r\n        width: 150,\r\n        borderRadius: '50%',\r\n        AlignItems: 'center',\r\n        marginBottom: 5,\r\n    },\r\n    avatarContainer: {\r\n        border: 5,\r\n        marginBottom: 15,\r\n        textAlign: 'center',\r\n    }\r\n});\r\n\r\nexport default function Profesor({ profesor }) {\r\n    const classes = useStyles();\r\n    //imagen random\r\n    const defaultAvatar = 'https://i.pravatar.cc/300';\r\n    return (\r\n        <Card className={classes.root}>\r\n            <CardActionArea>\r\n                <CardContent>\r\n                    <div className={classes.avatarContainer}>\r\n                        <img className={classes.avatar} src={defaultAvatar} />\r\n                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                            {profesor.nombre}\r\n                        </Typography>\r\n                        {profesor.cursos.map((cursos) => (\r\n                            <Typography paragraph variant=\"body2\" component=\"p\">\r\n                                {cursos.nombre}\r\n                            </Typography>    \r\n                        ))}\r\n                        <Typography gutterBottom variant=\"body2\" component=\"p\">\r\n                            {profesor.descripcion}\r\n                        </Typography>\r\n                    </div>\r\n                </CardContent>\r\n            </CardActionArea>\r\n        </Card>\r\n    );\r\n}","D:\\Users\\JGU\\Desktop\\PROYECTOS\\izily_test\\src\\containers\\Perfil.js",[],"D:\\Users\\JGU\\Desktop\\PROYECTOS\\izily_test\\src\\components\\Navbar.js",[],{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"51","replacedBy":"55"},{"ruleId":"53","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":132,"column":6,"nodeType":"59","endLine":132,"endColumn":17,"suggestions":"60"},{"ruleId":"61","severity":1,"message":"62","line":8,"column":8,"nodeType":"63","messageId":"64","endLine":8,"endColumn":19},{"ruleId":"61","severity":1,"message":"65","line":10,"column":8,"nodeType":"63","messageId":"64","endLine":10,"endColumn":17},{"ruleId":"61","severity":1,"message":"66","line":11,"column":8,"nodeType":"63","messageId":"64","endLine":11,"endColumn":14},{"ruleId":"67","severity":1,"message":"68","line":45,"column":25,"nodeType":"69","endLine":45,"endColumn":79},"no-native-reassign",["70"],"no-negated-in-lhs",["71"],["70"],["71"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'filtrarProfesores'. Either include it or remove the dependency array.","ArrayExpression",["72"],"no-unused-vars","'CardActions' is defined but never used.","Identifier","unusedVar","'CardMedia' is defined but never used.","'Button' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"73","fix":"74"},"Update the dependencies array to be: [etiquetas, filtrarProfesores]",{"range":"75","text":"76"},[4057,4068],"[etiquetas, filtrarProfesores]"]